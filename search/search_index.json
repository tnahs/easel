{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Easel \u00b6 Showcasing work for the lazy. Built on Flask, YAML, and Markdown.","title":"Home"},{"location":"#easel","text":"Showcasing work for the lazy. Built on Flask, YAML, and Markdown.","title":"Easel"},{"location":"markdown/","text":"Markdown \u00b6 Inserting Images \u00b6 When inserting images into a Markdown page or a Markdown content type item all paths must be relative to the parent page folder. With a structure like this: [site] \u2514\u2500\u2500 pages \u251c\u2500\u2500 ... \u2514\u2500\u2500 [markdown-page] \u251c\u2500\u2500 page.yaml \u251c\u2500\u2500 page-description.md \u251c\u2500\u2500 000-note.md \u251c\u2500\u2500 001-entry \u2502 \u251c\u2500\u2500 body.md \u2502 \u2514\u2500\u2500 images \u2502 \u2514\u2500\u2500 800x400.png \u2514\u2500\u2500 002-entry \u251c\u2500\u2500 body.md \u2514\u2500\u2500 1920x1080.png The image 800x400.png in 001-entry/images would require the path 001-entry/images/800x400.png to render correctly while 1920x1080.png in 002-entry would only require the path 002-entry/1920x1080.png .","title":"Markdown"},{"location":"markdown/#markdown","text":"","title":"Markdown"},{"location":"markdown/#inserting-images","text":"When inserting images into a Markdown page or a Markdown content type item all paths must be relative to the parent page folder. With a structure like this: [site] \u2514\u2500\u2500 pages \u251c\u2500\u2500 ... \u2514\u2500\u2500 [markdown-page] \u251c\u2500\u2500 page.yaml \u251c\u2500\u2500 page-description.md \u251c\u2500\u2500 000-note.md \u251c\u2500\u2500 001-entry \u2502 \u251c\u2500\u2500 body.md \u2502 \u2514\u2500\u2500 images \u2502 \u2514\u2500\u2500 800x400.png \u2514\u2500\u2500 002-entry \u251c\u2500\u2500 body.md \u2514\u2500\u2500 1920x1080.png The image 800x400.png in 001-entry/images would require the path 001-entry/images/800x400.png to render correctly while 1920x1080.png in 002-entry would only require the path 002-entry/1920x1080.png .","title":"Inserting Images"},{"location":"api-reference/custom-assets/","text":"Custom assets \u00b6 easel = Easel ( site = \"my-site\" , custom_assets = \"my-custom-assets\" , ) The assets directory must follow the following structure. my-custom-assets \u2502 \u251c\u2500\u2500 templates \u2502 \u251c\u2500\u2500 page.jinja2 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 static \u251c\u2500\u2500 css \u251c\u2500\u2500 js \u251c\u2500\u2500 fonts \u2514\u2500\u2500 images Additionally it must contain a page.jinja2 template in the templates directory. This is the entry-point for rendering pages. See easel.main.views.render_page and easel.main.views.page_landing .","title":"Custom assets"},{"location":"api-reference/custom-assets/#custom-assets","text":"easel = Easel ( site = \"my-site\" , custom_assets = \"my-custom-assets\" , ) The assets directory must follow the following structure. my-custom-assets \u2502 \u251c\u2500\u2500 templates \u2502 \u251c\u2500\u2500 page.jinja2 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 static \u251c\u2500\u2500 css \u251c\u2500\u2500 js \u251c\u2500\u2500 fonts \u2514\u2500\u2500 images Additionally it must contain a page.jinja2 template in the templates directory. This is the entry-point for rendering pages. See easel.main.views.render_page and easel.main.views.page_landing .","title":"Custom assets"},{"location":"api-reference/custom-types/","text":"Custom types \u00b6 # Import Easel's Page, Menu and Content factories. from easel.site.pages import page_factory from easel.site.menus import menu_factory from easel.site.contents import content_factory # Import your custom types. from .custom import CustomPage , CustomMenu , CustomContent # Register your custom types. page_factory . register_page_type ( \"custom-page\" , CustomPage ) menu_factory . register_menu_type ( \"custom-menu\" , CustomMenu ) content_factory . register_content_type ( \"custom-content\" , CustomContent )","title":"Custom types"},{"location":"api-reference/custom-types/#custom-types","text":"# Import Easel's Page, Menu and Content factories. from easel.site.pages import page_factory from easel.site.menus import menu_factory from easel.site.contents import content_factory # Import your custom types. from .custom import CustomPage , CustomMenu , CustomContent # Register your custom types. page_factory . register_page_type ( \"custom-page\" , CustomPage ) menu_factory . register_menu_type ( \"custom-menu\" , CustomMenu ) content_factory . register_content_type ( \"custom-content\" , CustomContent )","title":"Custom types"},{"location":"configuration/pages/","text":"Page Types \u00b6 Shared Attributes \u00b6 type Default: null \u2013 Sed sagittis ipsum non tempus volutpat. is-landing Default: false \u2013 One page must have the is-landing attribute set to true. This defines which page is shown when a visitor accesses the site i.e. www.site.com as opposed to www.site.com/page is-landing : false options.is-gallery Default: false \u2013 Sed sagittis ipsum non tempus volutpat. options : is-gallery : false options.gallery-column-count Default: auto \u2013 Sed sagittis ipsum non tempus volutpat. options : gallery-column-count : auto options.gallery-column-width Default: 250px \u2013 Sed sagittis ipsum non tempus volutpat. options : gallery-column-width : 250px options.show-captions Default: false \u2013 Sed sagittis ipsum non tempus volutpat. options : show-captions : false Lazy Page \u00b6 Lazy Page Configuration type : lazy Layout Page \u00b6 Layout Page Configuration type : layout contents : contents Default: [] \u2013 Sed sagittis ipsum non tempus volutpat. See Content Types for a list of available types. Content Types \u00b6 Shared Attributes type Sed sagittis ipsum non tempus volutpat. Valid options are: image video audio embedded text-block header break caption.title Default: null \u2013 Sed sagittis ipsum non tempus volutpat. caption.description Default: null \u2013 Sed sagittis ipsum non tempus volutpat. caption : title : \"Title\" description : \"Description\" Image path Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : image path : Video path Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : video path : Audio path Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : audio path : Embedded html Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : embedded html : Text Block path Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : text-block path : Header body Default: null \u2013 Sed sagittis ipsum non tempus volutpat. size Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : header body : size : Break \u00b6 size Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : break size : Markdown Page \u00b6 Markdown Page Configuration type : markdown","title":"Page Types"},{"location":"configuration/pages/#page-types","text":"","title":"Page Types"},{"location":"configuration/pages/#shared-attributes","text":"type Default: null \u2013 Sed sagittis ipsum non tempus volutpat. is-landing Default: false \u2013 One page must have the is-landing attribute set to true. This defines which page is shown when a visitor accesses the site i.e. www.site.com as opposed to www.site.com/page is-landing : false options.is-gallery Default: false \u2013 Sed sagittis ipsum non tempus volutpat. options : is-gallery : false options.gallery-column-count Default: auto \u2013 Sed sagittis ipsum non tempus volutpat. options : gallery-column-count : auto options.gallery-column-width Default: 250px \u2013 Sed sagittis ipsum non tempus volutpat. options : gallery-column-width : 250px options.show-captions Default: false \u2013 Sed sagittis ipsum non tempus volutpat. options : show-captions : false","title":"Shared Attributes"},{"location":"configuration/pages/#lazy-page","text":"Lazy Page Configuration type : lazy","title":"Lazy Page"},{"location":"configuration/pages/#layout-page","text":"Layout Page Configuration type : layout contents : contents Default: [] \u2013 Sed sagittis ipsum non tempus volutpat. See Content Types for a list of available types.","title":"Layout Page"},{"location":"configuration/pages/#content-types","text":"","title":"Content Types"},{"location":"configuration/pages/#break","text":"size Default: null \u2013 Sed sagittis ipsum non tempus volutpat. contents : - type : break size :","title":"Break"},{"location":"configuration/pages/#markdown-page","text":"Markdown Page Configuration type : markdown","title":"Markdown Page"},{"location":"configuration/site/","text":"Site \u00b6 General \u00b6 title Default: null \u2013 The title of the site. Placed in the <title> tag. favicon Default: null \u2013 A path to a favicon. This must be a path relative to the site directory i.e, the one containing the site.yaml file. copyright Default: null \u2013 Copyright information to be displayed inside the <footer> tag. Page \u00b6 page.width Default: 800px \u2013 Width of the site not including the menu. Colors \u00b6 colors.accent-base Default: hsla(25, 90%, 60%, 1.00) \u2013 Base accent color. colors.accent-light Default: hsla(25, 100%, 85%, 1.00) \u2013 Donec convallis convallis tellus, id dictum metus porttitor at. Menu \u00b6 menu.width Default: 175px\" \u2013 Sed eget porttitor enim, quis mattis tortor. menu.align Default: left \u2013 Donec blandit leo eros, at tincidunt augue elementum id. menu.header.label Default: null \u2013 Etiam porta rhoncus mi, vel vulputate ante placerat eu. menu.header.image.path Default: null \u2013 Fusce quam justo, accumsan non vehicula a, aliquet eget metus. menu.header.image.width Default: menu.width \u2013 Aenean eget erat nec libero dictum tempus bibendum ut turpis. menu.header.image.height Default: auto \u2013 Fusce nec luctus nisi, non elementum ipsum. menu.items Default: [] \u2013 Sed sagittis ipsum non tempus volutpat. See Menu Item Types for a list of available types. Menu Item Types \u00b6 Shared Attributes type Sed sagittis ipsum non tempus volutpat. Valid options are: link-page link-url section spacer Link Page label Default: null \u2013 Sed sagittis ipsum non tempus volutpat. links-to Default: null \u2013 Sed sagittis ipsum non tempus volutpat. menu : items : - type : link-page label : my-page links-to : my-page-directory Link URL label Default: null \u2013 Sed sagittis ipsum non tempus volutpat. url Default: null \u2013 Sed sagittis ipsum non tempus volutpat. menu : items : - type : link-url label : external-url url : www.external-url.com Section label Default: null \u2013 Sed sagittis ipsum non tempus volutpat. menu : items : - type : section label : other-projects Spacer size Default: medium \u2013 Valid options are: small , medium or large . menu : items : - type : spacer size : small Example Configuration \u00b6 title : favicon : copyright : page : width : colors : accent-base : accent-light : menu : width : align : header : label : image : path : width : height : items : Blank Configuration \u00b6 title : favicon : copyright : page : width : colors : accent-base : accent-light : menu : width : align : header : label : image : path : width : height : items :","title":"Site"},{"location":"configuration/site/#site","text":"","title":"Site"},{"location":"configuration/site/#general","text":"title Default: null \u2013 The title of the site. Placed in the <title> tag. favicon Default: null \u2013 A path to a favicon. This must be a path relative to the site directory i.e, the one containing the site.yaml file. copyright Default: null \u2013 Copyright information to be displayed inside the <footer> tag.","title":"General"},{"location":"configuration/site/#page","text":"page.width Default: 800px \u2013 Width of the site not including the menu.","title":"Page"},{"location":"configuration/site/#colors","text":"colors.accent-base Default: hsla(25, 90%, 60%, 1.00) \u2013 Base accent color. colors.accent-light Default: hsla(25, 100%, 85%, 1.00) \u2013 Donec convallis convallis tellus, id dictum metus porttitor at.","title":"Colors"},{"location":"configuration/site/#menu","text":"menu.width Default: 175px\" \u2013 Sed eget porttitor enim, quis mattis tortor. menu.align Default: left \u2013 Donec blandit leo eros, at tincidunt augue elementum id. menu.header.label Default: null \u2013 Etiam porta rhoncus mi, vel vulputate ante placerat eu. menu.header.image.path Default: null \u2013 Fusce quam justo, accumsan non vehicula a, aliquet eget metus. menu.header.image.width Default: menu.width \u2013 Aenean eget erat nec libero dictum tempus bibendum ut turpis. menu.header.image.height Default: auto \u2013 Fusce nec luctus nisi, non elementum ipsum. menu.items Default: [] \u2013 Sed sagittis ipsum non tempus volutpat. See Menu Item Types for a list of available types.","title":"Menu"},{"location":"configuration/site/#menu-item-types","text":"","title":"Menu Item Types"},{"location":"configuration/site/#example-configuration","text":"title : favicon : copyright : page : width : colors : accent-base : accent-light : menu : width : align : header : label : image : path : width : height : items :","title":"Example Configuration"},{"location":"configuration/site/#blank-configuration","text":"title : favicon : copyright : page : width : colors : accent-base : accent-light : menu : width : align : header : label : image : path : width : height : items :","title":"Blank Configuration"},{"location":"getting-started/a-minimal-application/","text":"A Minimal Application \u00b6 A minimal Easel application looks something like this: from easel import Easel easel = Easel ( \"my-site\" ) if __name__ == \"__main__\" : easel . run () Info Note that my-site refers to the directory my-site . We\u2019re providing a relative path here, telling Easel that our site directory is in the same directory as our application. Now save it as run.py in your my-easel directory next to your my-site directory. Finally, our Easel directory should look like this: my-easel \u251c\u2500\u2500 run.py \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u251c\u2500\u2500 my-page \u2502 \u2502 \u251c\u2500\u2500 page.yaml \u2502 \u2502 \u251c\u2500\u2500 image-001.jpg \u2502 \u2502 \u251c\u2500\u2500 image-002.jpg \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 ... \u2514\u2500\u2500 venv To run the application simply run the script. $ python run.py * Running on http://127.0.0.1:5000/ So what did that code do? First we imported the Easel class. An instance of this class returns a thinly wrapped Flask application. Next we create an instance of this class. The first argument is the path to the directory containing your site along with its config files, pages and contents. Finally we place easel.run() in a guard statement so we can run the local development server only when our script is run from command-line. This launches a very simple builtin server, which is good enough for testing but probably not what you want to use in production. For deployment options see Flask Deployment Options . Now head over to http://127.0.0.1:5000/ , and you should see your beautiful work.","title":"A Minimal Application"},{"location":"getting-started/a-minimal-application/#a-minimal-application","text":"A minimal Easel application looks something like this: from easel import Easel easel = Easel ( \"my-site\" ) if __name__ == \"__main__\" : easel . run () Info Note that my-site refers to the directory my-site . We\u2019re providing a relative path here, telling Easel that our site directory is in the same directory as our application. Now save it as run.py in your my-easel directory next to your my-site directory. Finally, our Easel directory should look like this: my-easel \u251c\u2500\u2500 run.py \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u251c\u2500\u2500 my-page \u2502 \u2502 \u251c\u2500\u2500 page.yaml \u2502 \u2502 \u251c\u2500\u2500 image-001.jpg \u2502 \u2502 \u251c\u2500\u2500 image-002.jpg \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2514\u2500\u2500 ... \u2514\u2500\u2500 venv To run the application simply run the script. $ python run.py * Running on http://127.0.0.1:5000/ So what did that code do? First we imported the Easel class. An instance of this class returns a thinly wrapped Flask application. Next we create an instance of this class. The first argument is the path to the directory containing your site along with its config files, pages and contents. Finally we place easel.run() in a guard statement so we can run the local development server only when our script is run from command-line. This launches a very simple builtin server, which is good enough for testing but probably not what you want to use in production. For deployment options see Flask Deployment Options . Now head over to http://127.0.0.1:5000/ , and you should see your beautiful work.","title":"A Minimal Application"},{"location":"getting-started/creating-your-site/","text":"Creating Your Site \u00b6 Building the Scaffold \u00b6 Inside your project directory create an site directory and a site.yaml file: $ mkdir my-site $ cd my-site $ touch site.yaml Our project directory should now look like this: my-easel \u251c\u2500\u2500 my-site \u2502 \u2514\u2500\u2500 site.yaml \u2514\u2500\u2500 venv Create a page directory and a page.yaml file: $ mkdir pages $ cd pages $ mkdir my-page $ cd my-page $ touch page.yaml Our project directory should now look like this: my-easel \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u2514\u2500\u2500 my-page \u2502 \u2514\u2500\u2500 page.yaml \u2514\u2500\u2500 venv Configuring the site.yaml \u00b6 Info Every site requires a site.yaml in the site\u2019s root directory. It\u2019s used to configure general site attributes as well as the menu. Add the following to the site.yaml file: # my-easel/my-site/site.yaml title : my-site favicon : copyright : \u00a9 2020 My Full Name page : width : colors : accent-base : accent-light : menu : width : align : header : label : my-site image : path : width : height : items : - type : link-page label : my-page links-to : my-page Note that under menu:items we have a single item with the attribute links-to set to my-page . This is a path relative to the pages directory referring to the my-page directory. Note that links-to always requires a path relative to the pages directory. Configuring the page.yaml \u00b6 Info Each page directory requires a page.yaml file. In the way that site.yaml configures the site, page.yaml configures the page. For this page we will do the laziest thing possible, create a Lazy page. This particular type of page auto-populates its contents from the contents of its respective folder sorted alphabetically by the absolute path of each item. Add the following to the page.yaml file: # my-easel/my-site/my-page/page.yaml # Specify this page is the 'landing' page. is-landing : true # Page type. type : lazy # Lazy Page options. options : show-captions : true Adding Some Content \u00b6 Now make sure to add some content: images, videos etc to the my-page directory: my-easel \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u2514\u2500\u2500 my-page \u2502 \u251c\u2500\u2500 page.yaml \u2502 \u251c\u2500\u2500 image-01.jpg \u2502 \u251c\u2500\u2500 image-02.jpg \u2502 \u251c\u2500\u2500 video.mp4 \u2502 \u2514\u2500\u2500 ... \u2514\u2500\u2500 venv Et voil\u00e0! Your site is ready almost for deployment!","title":"Creating Your Site"},{"location":"getting-started/creating-your-site/#creating-your-site","text":"","title":"Creating Your Site"},{"location":"getting-started/creating-your-site/#building-the-scaffold","text":"Inside your project directory create an site directory and a site.yaml file: $ mkdir my-site $ cd my-site $ touch site.yaml Our project directory should now look like this: my-easel \u251c\u2500\u2500 my-site \u2502 \u2514\u2500\u2500 site.yaml \u2514\u2500\u2500 venv Create a page directory and a page.yaml file: $ mkdir pages $ cd pages $ mkdir my-page $ cd my-page $ touch page.yaml Our project directory should now look like this: my-easel \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u2514\u2500\u2500 my-page \u2502 \u2514\u2500\u2500 page.yaml \u2514\u2500\u2500 venv","title":"Building the Scaffold"},{"location":"getting-started/creating-your-site/#configuring-the-siteyaml","text":"Info Every site requires a site.yaml in the site\u2019s root directory. It\u2019s used to configure general site attributes as well as the menu. Add the following to the site.yaml file: # my-easel/my-site/site.yaml title : my-site favicon : copyright : \u00a9 2020 My Full Name page : width : colors : accent-base : accent-light : menu : width : align : header : label : my-site image : path : width : height : items : - type : link-page label : my-page links-to : my-page Note that under menu:items we have a single item with the attribute links-to set to my-page . This is a path relative to the pages directory referring to the my-page directory. Note that links-to always requires a path relative to the pages directory.","title":"Configuring the site.yaml"},{"location":"getting-started/creating-your-site/#configuring-the-pageyaml","text":"Info Each page directory requires a page.yaml file. In the way that site.yaml configures the site, page.yaml configures the page. For this page we will do the laziest thing possible, create a Lazy page. This particular type of page auto-populates its contents from the contents of its respective folder sorted alphabetically by the absolute path of each item. Add the following to the page.yaml file: # my-easel/my-site/my-page/page.yaml # Specify this page is the 'landing' page. is-landing : true # Page type. type : lazy # Lazy Page options. options : show-captions : true","title":"Configuring the page.yaml"},{"location":"getting-started/creating-your-site/#adding-some-content","text":"Now make sure to add some content: images, videos etc to the my-page directory: my-easel \u251c\u2500\u2500 my-site \u2502 \u251c\u2500\u2500 site.yaml \u2502 \u2514\u2500\u2500 pages \u2502 \u2514\u2500\u2500 my-page \u2502 \u251c\u2500\u2500 page.yaml \u2502 \u251c\u2500\u2500 image-01.jpg \u2502 \u251c\u2500\u2500 image-02.jpg \u2502 \u251c\u2500\u2500 video.mp4 \u2502 \u2514\u2500\u2500 ... \u2514\u2500\u2500 venv Et voil\u00e0! Your site is ready almost for deployment!","title":"Adding Some Content"},{"location":"getting-started/installation/","text":"Installation \u00b6 Create an Environment \u00b6 Create a project directory with a new virtual environment: $ mkdir my-easel $ cd my-easel $ python3 -m venv venv Activate the Environment \u00b6 Before you work on your project, activate the corresponding environment: $ source venv/bin/activate Your shell prompt will change to show the name of the activated environment. Install Easel \u00b6 Within the activated environment, use the following command to install Easel: $ pip install easel Easel is now installed!","title":"Installation"},{"location":"getting-started/installation/#installation","text":"","title":"Installation"},{"location":"getting-started/installation/#create-an-environment","text":"Create a project directory with a new virtual environment: $ mkdir my-easel $ cd my-easel $ python3 -m venv venv","title":"Create an Environment"},{"location":"getting-started/installation/#activate-the-environment","text":"Before you work on your project, activate the corresponding environment: $ source venv/bin/activate Your shell prompt will change to show the name of the activated environment.","title":"Activate the Environment"},{"location":"getting-started/installation/#install-easel","text":"Within the activated environment, use the following command to install Easel: $ pip install easel Easel is now installed!","title":"Install Easel"}]}